data(HapMap)
str(HapMap)
str(HapMap.SNPs.pos)
myHapMap <- setupSNP(HapMap, colSNPs = 2:9307, sort = TRUE, info = HapMap.SNPs.pos, sep = "")
myHapMapres <- WGassociation(group, data = myHapMap, model = "dominant")
myHapMap <- setupSNP(HapMap, colSNPs = 3:9307, sort = TRUE, info = HapMap.SNPs.pos, sep = "")
myHapMapres <- WGassociation(group, data = myHapMap, model = "dominant")
head(myHapMapres)
print(myHapMapres)
plot(myHapMapres, whole=TRUE)
install.packages("readMzXmlData", dependencies = TRUE)
source("http://bioconductor.org/biocLite.R")
biocLite("SRAdb")
bioclite("Homo.sapiens")
biocLite("Homo.sapiens")
biocLite(Homo.sapiens)
source("http://bioconductor.org/biocLite.R")
biocLite(Homo.sapiens)
biocLite("Homo.sapiens")
library(Homo.sapiens)
class(Homo.sapiens)
keytypes(Homo.sapiens)
head(keys(Homo.sapiens, keytype="ENTREZID"))
length(unique(keys(Homo.sapiens, keytype="ENTREZID")))
length(unique(keys(Homo.sapiens, keytype="ENSEMBL")))
select(Homo.sapiens, key="9575", keytype="ENTREZID", columns=c("SYMBOL", "ENSEMBL", "ENTREZID"))
tab = select(Homo.sapiens, key="circadian rhythm", keytype="TERM", columns=c("ENTREZID"))
length(unique(tab$ENTREZID))
library(Biobase)
data(sample.ExpressionSet)
sample.ExpressionSet
samp = sample.ExpressionSet
samp
pData(samp)
pData(samp)$sex
samp$sex
sum(exprs(samp[,samp$sex=="Female"])[1,])
experimentData()
experimentData(samp)
annotation()
annotation(samp)
cor(samp$score, exprs(samp)["31489_at",])
library(BiocInstaller)
biocLite("BSgenome.Hsapiens.UCSC.hg19")
library(BSgenome.Hsapiens.UCSC.hg19)
BSgenome.Hsapiens.UCSC.hg19
chr11seq <- BSgenome.Hsapiens.UCSC.hg19[["chr11"]]
subseq(chr11seq,start=10^6,width=25)
seqs = C("ATG", "TGA", "TAA", "TAG")
seqs = c("ATG", "TGA", "TAA", "TAG")
n = sapply(seqs, function(x) countPattern(x,chr11seq))
which.max(n)
countPatern(TAA)
countPatern("TAA")
which.max(n)
countPattern(seq)
which.max("TAA")
which.max(n)
chr7seq <- BSgenome.Hsapiens.UCSC.hg19[["chr7"]]
alphaFreq = alphabetFrequency(chr7seq, as.prob=TRUE)
library(BiocInstaller)
biocLite("SNPlocs.Hsapiens.dbSNP.20120608")
y <- data.frame(a= 1, b = "a")
y
dput(y)
dput(y, file = "y.R")
new.y <- dget("y.R")
new.y
x <- "foo"
y <- data.frame(a=1L, b = "a")
dump(c("x", "y"), file = "data.R"
y <- data.frame(a=1L, b = "a")
dump(c("x", "y"), file = "data.R")
rm(x,y)
source("data.R")
str(y)
x
a <- data.frame(x = rnorm(100), y ) runif(100))
a <- data.frame(x = rnorm(100), y = runif(100))
b <- c(3, 4.4, 1 / 3)
save(a,b, file = "mydata.rda")
load("mydata.rda")
save.image(file = "mydata.RData")
load("mydata.RData")
x <- list(1, 2,3)
serialize(x, NULL)
con <- url("http://www.jhsph.edu", "r")
x <- readLines(con)
head(x)
x <- c("a", "b", "c", "c", "d", "a")
x[1]
x[2]
x[c(1,3,5)]
x <- matrix(1:6, 2, 3)
x
x[1,3]
x[1,2]
x[2,1]
x[1,]
x[,2]
x
x[1,2]
x[1,2,drop = FALSE]
x[1,2,drop = F]
x
x[1,]
x[1, , drop = FALSE]
x <- list(foor = 1:4, bar = 0.6)
x
x[1]
x[[1]]
x[bar]
x[[bar]]
x[['bar']]
x['bar']
x$bar
x <- c(1, 2, 3, NA, Na, 4, 5)
x <- c(1, 2, 3, NA,4, 5)
bad <- is.na(x)
print(bad)
y <- c("a", "b", NA, "d", NA, "f")
good <- complete.cases(x,y)
good
x[good]
y[good]
head(airquality)
good <- complete.cases(airquality)
head(airquality[good, ])
head(airquality[, good])
head(airquality[ ,good])
head(airquality[good, ])
x <- 1:4
y <- 6:9
z <- x+y
z
x
x>2
x-y
x*y
x <- matrix(1:4, 2,2)
x
y <- matrix(rep(10,4), 2, 2)
y
x*y
x/y
library(COPDSexualDimorphism.data)
library(BiocInstaller)
biocLite("BSgenome.Hsapiens.UCSC.hg19")
library(dplyr)
which R
R
R.Version()
f <- function(num) {    +        +        + +}+         chars <- nchar(hello) * num+ chars+}
f <- function(num){
hello <- "Hello, world\n"
for(i in seq_len(num)){ }
}}
x <- 10:1
y <- -4:5
q <- c("Hockey", "Football", "Baseball", "Curling", "Rugby", "Lacrosse", "Basketball", "Tennis", "Cricket", "Soccer")
theDF <- data.frame(x,y,q)
theDF
theDF <- data.frame(First = x, Second = y, Sport = q)
theDF
nrow(theDF)
ncol(theDF)
dim(theDF)
names(theDF)
names(theDF)[3]
names(theDF)[2]
rownames(theDF)
rownames(theDF) <- ("One", "Two", "Three", "Four", "Five", "Six","Seven", "Eight", "Nine", "Ten")
rownames(theDF) <- c("One", "Two", "Three", "Four", "Five", "Six","Seven", "Eight", "Nine", "Ten")
rownames(theDF)
rownames(theDF)<- NULL
rownames(theDF)
head(theDF)
head(theDF, n = 7)
head(theDF, n = 8)
tail(theDF)
theDF$Sport
theDF$Second
theDF
theDF[3,2]
theDF[10,2]
theDF[10,3]
theDF[3, 2:3]
theDF[c(3,5), 2]
theDF[c(5,10), 3]
theDF[c(3,5), 2:3]
theDF[,3]
theDF[,2:3]
theDF[,c(1,3)]
theDF[2,]
theDF[2:4, ]
theDF[c(2,4),]
theDF[,c("First", "Sport")]
theDF[,"Sport"]
class(theDF[,"Sport"])
theDF["Sport"]
class(theDF["Sport"])
theDF[["Sport"]]
class(theDF[["Sport"]])
theDF[,"Sport", drop = FALSE]
class(theDF[,"Sport", drop = FALSE])
class(theDF[,3, drop = F])
theDF[,3, drop = FALSe]
theDF[,3, drop = FALSE]
list(1,2,3)
list(c(1,2,3))
list3 <- list(c(1,2,3), 3:7))
list3 <- list(c(1,2,3), 3:7))
(list3 <- list(c(1,2,3), 3:7))
list(theDF, 1:10)
list5 <- list(theDF, 1:10, list3)
list5
list5
names(list5)
names(list5) <- c("data.frame", "vector", "list")
names(list5)
list5
list6 <- list(TheDataFrame = theDF, TheVector = 1:10, TheList = list3)
names(list6)
list6
TheVector
(emptyList <- vector(mode = "list", length = 4)
)
list(5)
list5
list5[[1]]
list5[["data.frame"]]
list5[[1]]
list5[[1]]$Sport
list5[[1]][,"Second"]
length(list5)
list5[[4]] <- 2
length(list5)
list5[["NewElement"]] <- 3:6
list5
length(list5)
names(list5)
length = c (100, 200, 300, 100, 100)
theta.hat = c(1, 2, 3) / 10000
theta.hat
theta.hat = c(100, 200) / 10000
theta.hat
320000/12
25000*12
12*25
install.packages(c("BH", "KernSmooth", "MASS", "Matrix", "R6", "Rcpp", "boot", "class", "cluster", "codetools", "dplyr", "foreign", "lattice", "manipulate", "mgcv", "nlme", "nnet", "rpart", "spatial", "survival"))
gnorm(0.99)
getwd()
install.packages("devtools")
library(devtools)
install_github("Rfacebook", "pablobarbera", subdir="Rfacebook")
library(Rfacebook)
install.packages("httr","rjson", "httpub")
install.packages("httr", "rjson", "httpub")
install.packages("httr")
install.packages("http")
library("httr", lib.loc="~/Library/R/3.2/library")
library("curl", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library("dplyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library("jsonlite", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library("httr", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library("rjson", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library("httpuv", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library("httr", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
install.packages("manipulate", lib="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library("httr", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
install_github("Rfacebook", "pablobarbera", subdir="Rfacebook")
install.packages("devtools")
library("devtools", lib.loc="~/Library/R/3.2/library")
install.packages("devtools")
install.packages("devtools")
library("curl", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library("devtools", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library("devtools", lib.loc="~/Library/R/3.2/library")
library(devtools)
install_github("Rfacebook", "pablobarbera", subdir="Rfacebook")
library(Rfacebook)
install.packages("httr")
install.packages("httr")
library(httr)
install.packages("rjson")
library(rjson)
install.packages("httpub")
library(httpub)
install.packages("httpuv")
library("httpuv")
install_github("Rfacebook", "pablobarbera", subdir="Rfacebook")
library(devtools)
install_github("Rfacebook", "pablobarbera", subdir="Rfacebook")
library(Rfacebook)
token <- "CAAF76BjIAyMBABS8ZCicGDBwAngam3H7VJszPbtbO0zIWj9AMagccM4uyQon7likFZBqCtx5eZBqUGlLhRgc1t8AMo84ZCcEm6nZAYN7ScX0KosElmcNKDGY5ZCD6y65HlVISJz3FxZBCtrAHcxZCktJenxWXZBrUwZCUjIxnKdEZC1Mb5VHhsrYY7OMepggoTP8NZAqqMqlbLGK1QZDZD"
me<- getUsers("778278022196130", token, private_info = TRUE)
token <- "CAACEdEose0cBAEAAU2E2sqXj1dXFZBbqryz4jEn0SUuNfwTswtMbAZAUjdPdYHk818aS0iAuXFTLXW6QoJpDxbGgZAcV5VMSWOPTzb04UrilxjCedMi87Uyngown7Wfjh5gl7ZAJyZA0RhJT04JW0osZBtsniu2fT0YSHhSDRISTMnH02cvIjBFblyLirXYtJdrt6UvkvTIwZDZD"
me<- getUsers("778278022196130", token, private_info = TRUE)
me$name
me<- getUsers("145634995501895", token, private_info = TRUE)
me<- getUsers("145634995501895", token, private_info = TRUE)
require("Rfacebook")
fb_oauth<-    fbOAuth(app_id="417711755100963",app_secret="",extended_permissions = TRUE)
fb_oauth<-    fbOAuth(app_id="417711755100963",app_secret="9SagelDhaka!%&",extended_permissions = TRUE)
fb_oauth<-    fbOAuth(app_id="11",app_secret="XX",extended_permissions = TRUE)
require("Rfacebook")
fb_oauth<-    fbOAuth(app_id="11",app_secret="XX",extended_permissions = TRUE)
fb_oauth <-    fbOAuth(app_id="11",app_secret="XX",extended_permissions = TRUE)
fb_oauth <-    fbOAuth(app_id="417711755100963",app_secret="913eeb98aed21d3fc55eedc5cece6fce",extended_permissions = TRUE)
token <- "CAACEdEose0cBACHCW6oITXfjtbB8gReOEiww6e28wvMnnmmADYECuCeNnuiBZAYP3AZBVQ0HHlG9Y2AyYFwjvQOeZCJyFSDjyYNOQLcFSpj1fUsGJiI11oChh8e6zoPKkp4zEqJYHZBic3yBQIXRLLhebmbxrpRY7CjztzmTXYEZAt2BoAS6uPHugZBDLnYMmgElrfILrzpQZDZD"
friends <- getFriends(token, simplify = TRUE)
?getFriends
friends <- getFriends(token, simplify = TRUE)
friends <- getFriends(token, simplify = FALSE)
token <- "CAAF76BjIAyMBAJFQHsPk6vllB1iNgQEajCzUSC1nIKezNcXTACIG3ZAGZBeXclSDwjrf90d6slxNCpVBdm6djpaO1R777ZCgyZCcZA0kXazNEwWJYy8fBFUFMSYo8ZAHwxa9ZAdm1FMq7Dh7KVkIXrLj3aF8zpIo5MalKyDI8oSZBbMkd7gR04tHkTCS4vJw8k1ugdVOXT3tuwZDZD"
friends <- getFriends(token, simplify = TRUE)
friends <- getFriends(token, simplify = TRUE)
network<- getNetwork(token, format="adj.matrix")
load.packages("Rfacebook")
install.packages("Rfacebook")
install.packages("Rfacebook")
library(devtools)
install_github("Rfacebook", "pablobarbera", subdir = "Rfacebook")  # from GitHub
my_friends <- getFriends(token, simplify = TRUE)
install_github("Rfacebook", "pablobarbera", subdir="Rfacebook")
require("Rfacebook")
fb_oauth <- fbOAuth(app_id="123456789", app_secret="1A2B3C4D",extended_permissions = TRUE)
token <- "CAACEdEose0cBAKYAUNozfn3wxmZCdZA4jdwrBYZC6sO4GYsuatKbz5ROvC9PfEZCUnbNx9lMQusVQVXUt0Tc1VFRZCF2NHBnV3HragLnYzcM35JfjZAZBHkqJqaZB2yWlsqLzCyCI2sP6cTA6pnWiOEGUYSZCpF80rWufCX0YfBmQBqQDECHH5BJGI4qEL9TNOxxQvdkmsyIHiQZDZD"
friends<- getFriends(token, simplify = TRUE)
library("Rfacebook", lib.loc="~/Library/R/3.2/library")
library("devtools", lib.loc="~/Library/R/3.2/library")
friends<- getFriends(token, simplify = TRUE)
install.packages(c("devtools", "rjson", "bit64", "httr"))
library(devtools)
install_github("geoffjentry/twitteR")
library(twitteR)
api_key <- "f1sIOQmEdPTxZys0gybL5DvBJ"
api_secret <- "Fc13aoPE561Ld2GdAp5SMjH4102EQBfdXYBOq12WjneYlYewlf"
access_token <- "1958422754-Lp5oCsbqDtWPCBL3wO6qQ9EzieRft6bwTDroTui"
access_token_secret <- "nM6VVMUkgeeXJLDNU1ef0X3f28lMmqppzDpucAhEzhPnk"
setup_twitter_oauth(api_key, api_secret, access_token, access_token_secret)
EarthQuakeTweets = searchTwitter("EarthQuake", since='2014-09-29')
head(EarthQuakeTweets)
PianoRussianStockholm = searchTwitter("Piano")
PianoRussianStockholm
? searchTwitter
PianoRussianStockholm = searchTwitter("Piano+Stockholm+Russian", since = '2015-01-01', n = 100)
PianoRussianStockholm = searchTwitter("Piano+Stockholm+Russia", since = '2015-01-01', n = 100)
PianoRussianStockholm = searchTwitter("Piano+Stockholm+Russia", since = '2010-01-01', n = 100)
PianoRussianStockholm = searchTwitter("Piano+Stockholm+Russia", since = '2010-01-01')
PianoRussianStockholm = searchTwitter("Piano", since = '2010-01-01')
PianoRussianStockholm
geocode(stockholm)
PianoRussianStockholm = searchTwitter("piano+russia", since = '2010-01-01', geocode = "59.3294, - 18.0686, 100 mi")
PianoRussianStockholm = searchTwitter("piano+russia", since = '2010-01-01', geocode = "59.3294, - 18.0686, 100mi")
PianoRussianStockholm = searchTwitter("piano", since = '2010-01-01', geocode = "59.3294, - 18.0686,100mi")
PianoRussianStockholm = searchTwitter("piano", geocode = "59.3294,18.0686,100mi")
PianoRussianStockholm
PianoRussianStockholm = searchTwitter("пианино", geocode = "59.3294,18.0686,100mi")
PianoRussianStockholm = searchTwitter("пианино", geocode = "59.3294,18.0686,200mi")
?inference
??inference
biocLite("RforProteomics", dependencies = TRUE)
library("BiocInstaller")
biocLite("RforProteomics")
biocLite(RforProteomics", dependencies = True )
p
)
)))
≈
()
""
biocLite("RforProteomics", dependencies = TRUE)
library("RforProteomics")
RforProteomics()
RProtVis()
library("HColorBrewer")
library("RColorBrewer")
library("ggplot2")
library("rshape2")
library("reshape2")
library("msdata")
filepath <- system.file("microtofq", package = "msdata")
file <- list.files(filepath, pattern = "MM14.mzML", full.name = TRUE, recursive = TRUE)
mz <- openMSfile(file)
basename(fileName(mz))
isInitialized(mz)
runInfo(mz)
instrumentInfo
class(mz)
library(rTANDEM)
taxonomy <- rTTaxo(taxon = "yeast", format = system.file("extdata/fase/scd.fasta.pro, package = "rTANDEM""))
taxonomy <- rTTaxo(taxon = "yeast",                   format = "peptide",                   URL = system.file(                       "extdata/fasta/scd.fasta.pro",                       package="rTANDEM"))
taxonomy <- rTTaxo(taxon = "yeast",                   format = "peptide",                   URL = system.file(                       "extdata/fasta/scd.fasta.pro",                       package="rTANDEM"))
install.packages("MALDIquantForeign")
library(MALDIquantForeign)
f<- rnorm(100)
hist(f)
f[3,]
f[3]
1/8
1.5*2
clear
install.packages('tm',repos='http://cran.us.r-project.org')
install.packages('twitteR',repos='http://cran.us.r-project.org')
install.packages('wordcloud',repos='http://cran.us.r-project.org')
install.packages('RColorBrewer',repos='http://cran.us.r-project.org')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
install.packages("twitteR", repos = "http://cran.us.r-project.org")
install.packages("twitteR", repos = "http://cran.us.r-project.org")
install.packages("twitteR", repos = "http://cran.us.r-project.org")
install.packages("twitteR", repos = "http://cran.us.r-project.org")
install.packages("twitteR", repos = "http://cran.us.r-project.org")
install.packages("twitteR", repos = "http://cran.us.r-project.org")
source('~/.active-rstudio-document')
install.packages("twitteR", repos = "http://cran.us.r-project.org")
install.packages("twitteR", repos = "http://cran.us.r-project.org")
source('~/.active-rstudio-document')
install.packages("twitteR", repos = "http://cran.us.r-project.org")
install.packages("twitteR", repos = "http://cran.us.r-project.org")
install.packages("twitteR", repos = "http://cran.us.r-project.org")
install.packages("twitteR", repos = "http://cran.us.r-project.org")
install.packages("twitteR", repos = "http://cran.us.r-project.org")
source('~/.active-rstudio-document')
install.packages("twitteR", repos = "http://cran.us.r-project.org")
install.packages("twitteR", repos = "http://cran.us.r-project.org")
library(twitteR)
library(tm)
library(wordcloud)
library(RColorBrewer)
install.packages("RColorBrewer")
install.packages("RColorBrewer")
setup_twitter_oauth(consumer_key, consumer_secret, access_token=NULL, access_secret=NULL)
source('~/.active-rstudio-document')
install.packages("twitteR", repos = "http://cran.us.r-project.org")
install.packages("RColorBrewer", repos = "http://cran.us.r-project.org")
install.packages("wordcloud", repos = "http://cran.us.r-project.org")
install.packages("RColorBrewer", repos = "http://cran.us.r-project.org")
install.packages("wordcloud", repos = "http://cran.us.r-project.org")
install.packages("wordcloud", repos = "http://cran.us.r-project.org")
source('~/Documents/NLP_tweeter_R/twitter_data.R')
source('~/Documents/NLP_tweeter_R/twitter_data.R')
# Search for topic in twitter
schibsted.tweets <- searchTwitter("schibsted", n = 2000, lang = "en")
schibsted.text = sapply(schibsted.tweets, function(x) x$getText())
source('~/Documents/NLP_tweeter_R/twitter_data.R')
install.packages("twitteR", repos = "http://cran.us.r-project.org")
install.packages("wordcloud", repos = "http://cran.us.r-project.org")
install.packages("RColorBrewer", repos = "http://cran.us.r-project.org")
install.packages("wordcloud", repos = "http://cran.us.r-project.org")
install.packages("RColorBrewer", repos = "http://cran.us.r-project.org")
install.packages("RColorBrewer", repos = "http://cran.us.r-project.org")
schibsted.tweets <- searchTwitter("schibsted", n = 2000, lang = "en")
consumer_key = "pekrpiRFNvHW5PFhDtxLkyV6X"
consumer_secret = "floRiUQZh1786wMQbggwSEMulNtc1olHJIYNYk4sFwZ2HGICAd"
access_token = "1958422754-0tIA86QD9oNpYffFv1PrCG4RPcKKv9m2qWw3Rec"
access_secret = "TzClr5Z5CmU82nZiDYfdUGASuRHGv69V3Ou8lk5nwgmSd"
setup_twitter_oauth(consumer_key, consumer_secret, access_token=NULL, access_secret=NULL)
library(twitteR)
library(tm)
library(wordcloud)
library(RColorBrewer)
consumer_key = "pekrpiRFNvHW5PFhDtxLkyV6X"
consumer_secret = "floRiUQZh1786wMQbggwSEMulNtc1olHJIYNYk4sFwZ2HGICAd"
access_token = "1958422754-0tIA86QD9oNpYffFv1PrCG4RPcKKv9m2qWw3Rec"
access_secret = "TzClr5Z5CmU82nZiDYfdUGASuRHGv69V3Ou8lk5nwgmSd"
setup_twitter_oauth(consumer_key, consumer_secret, access_token=NULL, access_secret=NULL)
consumer_key = "pekrpiRFNvHW5PFhDtxLkyV6X"
consumer_secret = "floRiUQZh1786wMQbggwSEMulNtc1olHJIYNYk4sFwZ2HGICAd"
access_token = "1958422754-0tIA86QD9oNpYffFv1PrCG4RPcKKv9m2qWw3Rec"
access_secret = "TzClr5Z5CmU82nZiDYfdUGASuRHGv69V3Ou8lk5nwgmSd"
setup_twitter_oauth(consumer_key, consumer_secret, access_token, access_secret)
schibsted.tweets <- searchTwitter("schibsted", n = 2000, lang = "en")
schibsted.text <- sapply(schibsted.tweets, function(x) x$getText())
# clean text data
schibsted.text <- iconv(schibsted.text, 'UTF-8', 'ASCII') # remove emoticons
schibsted.corpus <- Corpus(VectorSource(schibsted.text)) # create a corpus
# load library tm, tmap
library(tm)
library(tmap)
install.packages("tmap", repos = 'http://cran.us.r-project.org')
library(tmap)
# clean text data
schibsted.text <- iconv(schibsted.text, 'UTF-8', 'ASCII') # remove emoticons
schibsted.corpus <- Corpus(VectorSource(schibsted.text)) # create a corpus
schibsted.tweets <- searchTwitter("schibsted", n = 2000, lang = "en")
schibsted.text <- sapply(schibsted.tweets, function(x) x$getText())
library(tm)
library(tmap)
schibsted.text <- iconv(schibsted.text, 'UTF-8', 'ASCII') # remove emoticons
schibsted.corpus <- Corpus(VectorSource(schibsted.text)) # create a corpus
install.packages("http://cran.r-project.org/bin/windows/contrib/3.0/tm_0.5-10.zip",repos=NULL)
library(tm)
schibsted.corpus <- Corpus(VectorSource(schibsted.text)) # create a corpus
library(wordcloud)
schibsted.corpus <- Corpus(VectorSource(schibsted.text)) # create a corpus
load("~/Documents/textminingR/twittertextmining/twittertextmining.Rproj")
clar
setwd("~/Documents/machinelearningR/anavidya")
clear
install.packages("dplyr","mtcars","iris")
install.packages("dplyr","mtcars","iris")
install.packages("dplyr","mtcars","iris")
install.packages("dplyr")
library("mtcars")
library("dplyr")
library("mtcars")
install.packages("mtcars")
library("dplyr")
library("mtcars")
data("iris")
